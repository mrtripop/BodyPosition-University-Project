// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using BodyPosition.Core;
//
//    var testModel = TestModel.FromJson(jsonString);

namespace BodyPosition.MVVM.Model.TestModel
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class TestModel
    {
        [JsonProperty("id")]
        public int Id { get; set; }

        [JsonProperty("testName")]
        public string TestName { get; set; }

        [JsonProperty("userID")]
        public int UserId { get; set; }

        [JsonProperty("date")]
        public string Date { get; set; }

        [JsonProperty("time")]
        public string Time { get; set; }
    }

    public partial class TestModel
    {
        public static Dictionary<string, Dictionary<string, TestModel>> FromJson(string json) => JsonConvert.DeserializeObject<Dictionary<string, Dictionary<string, TestModel>>>(json, Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this Dictionary<string, Dictionary<string, TestModel>> self) => JsonConvert.SerializeObject(self, Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
